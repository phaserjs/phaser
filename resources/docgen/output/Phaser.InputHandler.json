{"class":{"name":"Phaser.InputHandler","extends":"","static":false,"constructor":true,"parameters":[{"name":"sprite","type":["Phaser.Sprite"],"help":"The Sprite object to which this Input Handler belongs.","optional":false,"default":null}],"help":"The Input Handler is bound to a specific Sprite and is responsible for managing all Input events on that Sprite."},"consts":[],"methods":{"public":[{"name":"checkBoundsRect","static":false,"returns":null,"help":"Bounds Rect check for the sprite drag","line":1421,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"checkBoundsSprite","static":false,"returns":null,"help":"Parent Sprite Bounds check for the sprite drag.","line":1470,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"checkPixel","static":false,"returns":{"types":["boolean"],"help":"true if there is the alpha of the pixel is >= InputHandler.pixelPerfectAlpha"},"help":"Runs a pixel perfect check against the given x\/y coordinates of the Sprite this InputHandler is bound to.\\nIt compares the alpha value of the pixel and if >= InputHandler.pixelPerfectAlpha it returns true.","line":728,"public":true,"protected":false,"private":false,"parameters":[{"name":"x","type":["number"],"help":"The x coordinate to check.","optional":false,"default":null},{"name":"y","type":["number"],"help":"The y coordinate to check.","optional":false,"default":null},{"name":"pointer","type":["Phaser.Pointer"],"help":"The pointer to get the x\/y coordinate from if not passed as the first two parameters.","optional":true,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"checkPointerDown","static":false,"returns":{"types":["boolean"],"help":"True if the pointer is down, otherwise false."},"help":"Checks if the given pointer is both down and over the Sprite this InputHandler belongs to.\\nUse the `fastTest` flag is to quickly check just the bounding hit area even if `InputHandler.pixelPerfectOver` is `true`.","line":658,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null},{"name":"fastTest","type":["boolean"],"help":"Force a simple hit area check even if `pixelPerfectOver` is true for this object?","optional":true,"default":"false"}],"inherited":false,"inheritedFrom":""},{"name":"checkPointerOver","static":false,"returns":{"types":["boolean"],"help":""},"help":"Checks if the given pointer is over the Sprite this InputHandler belongs to.\\nUse the `fastTest` flag is to quickly check just the bounding hit area even if `InputHandler.pixelPerfectOver` is `true`.","line":693,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null},{"name":"fastTest","type":["boolean"],"help":"Force a simple hit area check even if `pixelPerfectOver` is true for this object?","optional":true,"default":"false"}],"inherited":false,"inheritedFrom":""},{"name":"destroy","static":false,"returns":null,"help":"Clean up memory.","line":386,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"disableDrag","static":false,"returns":null,"help":"Stops this sprite from being able to be dragged. If it is currently the target of an active drag it will be stopped immediately. Also disables any set callbacks.","line":1230,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"disableSnap","static":false,"returns":null,"help":"Stops the sprite from snapping to a grid during drag or release.","line":1410,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"downDuration","static":false,"returns":{"types":["number"],"help":"The number of milliseconds the pointer has been pressed down on the Sprite, or -1 if not over."},"help":"If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.","line":1173,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"enableDrag","static":false,"returns":null,"help":"Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback","line":1196,"public":true,"protected":false,"private":false,"parameters":[{"name":"lockCenter","type":["boolean"],"help":"If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.","optional":true,"default":"false"},{"name":"bringToTop","type":["boolean"],"help":"If true the Sprite will be bought to the top of the rendering list in its current Group.","optional":true,"default":"false"},{"name":"pixelPerfect","type":["boolean"],"help":"If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.","optional":true,"default":"false"},{"name":"alphaThreshold","type":["boolean"],"help":"If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.","optional":true,"default":"255"},{"name":"boundsRect","type":["Phaser.Rectangle"],"help":"If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.","optional":true,"default":"null"},{"name":"boundsSprite","type":["Phaser.Sprite"],"help":"If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.","optional":true,"default":"null"}],"inherited":false,"inheritedFrom":""},{"name":"enableSnap","static":false,"returns":null,"help":"Make this Sprite snap to the given grid either during drag or when it's released.\\nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.","line":1390,"public":true,"protected":false,"private":false,"parameters":[{"name":"snapX","type":["number"],"help":"The width of the grid cell to snap to.","optional":false,"default":null},{"name":"snapY","type":["number"],"help":"The height of the grid cell to snap to.","optional":false,"default":null},{"name":"onDrag","type":["boolean"],"help":"If true the sprite will snap to the grid while being dragged.","optional":true,"default":"true"},{"name":"onRelease","type":["boolean"],"help":"If true the sprite will snap to the grid when released.","optional":true,"default":"false"},{"name":"snapOffsetX","type":["number"],"help":"Used to offset the top-left starting point of the snap grid.","optional":true,"default":"0"},{"name":"snapOffsetX","type":["number"],"help":"Used to offset the top-left starting point of the snap grid.","optional":true,"default":"0"}],"inherited":false,"inheritedFrom":""},{"name":"globalToLocalX","static":false,"returns":null,"help":"Warning: EXPERIMENTAL","line":1299,"public":true,"protected":false,"private":false,"parameters":[{"name":"x","type":["number"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"globalToLocalY","static":false,"returns":null,"help":"Warning: EXPERIMENTAL","line":1316,"public":true,"protected":false,"private":false,"parameters":[{"name":"y","type":["number"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"isPixelPerfect","static":false,"returns":{"types":["boolean"],"help":"True if the this InputHandler has either `pixelPerfectClick` or `pixelPerfectOver` set to `true`."},"help":"Is this object using pixel perfect checking?","line":449,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"justOut","static":false,"returns":{"types":["boolean"],"help":""},"help":"Returns true if the pointer has left the Sprite within the specified delay time (defaults to 500ms, half a second)","line":1107,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null},{"name":"delay","type":["number"],"help":"The time below which the pointer is considered as just out.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"justOver","static":false,"returns":{"types":["boolean"],"help":""},"help":"Returns true if the pointer has entered the Sprite within the specified delay time (defaults to 500ms, half a second)","line":1091,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null},{"name":"delay","type":["number"],"help":"The time below which the pointer is considered as just over.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"justPressed","static":false,"returns":{"types":["boolean"],"help":""},"help":"Returns true if the pointer has touched or clicked on the Sprite within the specified delay time (defaults to 500ms, half a second)","line":1123,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null},{"name":"delay","type":["number"],"help":"The time below which the pointer is considered as just over.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"justReleased","static":false,"returns":{"types":["boolean"],"help":""},"help":"Returns true if the pointer was touching this Sprite, but has been released within the specified delay time (defaults to 500ms, half a second)","line":1139,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null},{"name":"delay","type":["number"],"help":"The time below which the pointer is considered as just out.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"overDuration","static":false,"returns":{"types":["number"],"help":"The number of milliseconds the pointer has been over the Sprite, or -1 if not over."},"help":"If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.","line":1154,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerDown","static":false,"returns":{"types":["boolean"],"help":"- True if the given pointer is down, otherwise false."},"help":"If the Pointer is down this returns true. Please note that it only checks if the Pointer is down, not if it's down over any specific Sprite.","line":494,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["number"],"help":"The index of the pointer to check. You can get this from Phaser.Pointer.id.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerDragged","static":false,"returns":{"types":["boolean"],"help":"True if the pointer is dragging an object, otherwise false."},"help":"Is this sprite being dragged by the mouse or not?","line":641,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerOut","static":false,"returns":{"types":["boolean"],"help":"True if the given pointer (if a index was given, or any pointer if not) is out of this object."},"help":"Is the Pointer outside of this Sprite?","line":583,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"The ID number of a Pointer to check. If you don't provide a number it will check all Pointers.","optional":true,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerOver","static":false,"returns":{"types":["boolean"],"help":"- True if the given pointer (if a index was given, or any pointer if not) is over this object."},"help":"Is the Pointer over this Sprite?","line":553,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"The ID number of a Pointer to check. If you don't provide a number it will check all Pointers.","optional":true,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerTimeDown","static":false,"returns":{"types":["number"],"help":""},"help":"A timestamp representing when the Pointer first touched the touchscreen.","line":524,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["number"],"help":"The index of the pointer to check. You can get this from Phaser.Pointer.id.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerTimeOut","static":false,"returns":{"types":["number"],"help":""},"help":"A timestamp representing when the Pointer left the touchscreen.","line":627,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerTimeOver","static":false,"returns":{"types":["number"],"help":""},"help":"A timestamp representing when the Pointer first touched the touchscreen.","line":613,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerTimeUp","static":false,"returns":{"types":["number"],"help":""},"help":"A timestamp representing when the Pointer left the touchscreen.","line":538,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerUp","static":false,"returns":{"types":["boolean"],"help":"- True if the given pointer is up, otherwise false."},"help":"If the Pointer is up this returns true. Please note that it only checks if the Pointer is up, not if it's up over any specific Sprite.","line":509,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["number"],"help":"The index of the pointer to check. You can get this from Phaser.Pointer.id.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerX","static":false,"returns":{"types":["number"],"help":"The x coordinate of the Input pointer."},"help":"The x coordinate of the Input pointer, relative to the top-left of the parent Sprite.\\nThis value is only set when the pointer is over this Sprite.","line":463,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["number"],"help":"The index of the pointer to check. You can get this from Phaser.Pointer.id.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"pointerY","static":false,"returns":{"types":["number"],"help":"The y coordinate of the Input pointer."},"help":"The y coordinate of the Input pointer, relative to the top-left of the parent Sprite\\nThis value is only set when the pointer is over this Sprite.","line":479,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["number"],"help":"The index of the pointer to check. You can get this from Phaser.Pointer.id.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"reset","static":false,"returns":null,"help":"Resets the Input Handler and disables it.","line":337,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"setDragLock","static":false,"returns":null,"help":"Restricts this sprite to drag movement only on the given axis. Note: If both are set to false the sprite will never move!","line":1369,"public":true,"protected":false,"private":false,"parameters":[{"name":"allowHorizontal","type":["boolean"],"help":"To enable the sprite to be dragged horizontally set to true, otherwise false.","optional":true,"default":"true"},{"name":"allowVertical","type":["boolean"],"help":"To enable the sprite to be dragged vertically set to true, otherwise false.","optional":true,"default":"true"}],"inherited":false,"inheritedFrom":""},{"name":"start","static":false,"returns":{"types":["Phaser.Sprite"],"help":"The Sprite object to which the Input Handler is bound."},"help":"Starts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.","line":231,"public":true,"protected":false,"private":false,"parameters":[{"name":"priority","type":["number"],"help":"Higher priority sprites take click priority over low-priority sprites when they are stacked on-top of each other.","optional":false,"default":null},{"name":"useHandCursor","type":["boolean"],"help":"If true the Sprite will show the hand cursor on mouse-over (doesn't apply to mobile browsers)","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"startDrag","static":false,"returns":null,"help":"Called by Pointer when drag starts on this Sprite. Should not usually be called directly.","line":1251,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"stop","static":false,"returns":null,"help":"Stops the Input Handler from running.","line":366,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"stopDrag","static":false,"returns":null,"help":"Called by Pointer when drag is stopped on this Sprite. Should not usually be called directly.","line":1333,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"updateDrag","static":false,"returns":{"types":["boolean"],"help":""},"help":"Updates the Pointer drag on this Sprite.","line":1012,"public":true,"protected":false,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""}],"protected":[{"name":"update","static":false,"returns":null,"help":"Update.","line":794,"public":false,"protected":true,"private":false,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"validForInput","static":false,"returns":{"types":["boolean"],"help":"True if the object this InputHandler is bound to should be considered as valid for input detection."},"help":"Checks if the object this InputHandler is bound to is valid for consideration in the Pointer move event.\\nThis is called by Phaser.Pointer and shouldn't typically be called directly.","line":419,"public":false,"protected":true,"private":false,"parameters":[{"name":"highestID","type":["number"],"help":"The highest ID currently processed by the Pointer.","optional":false,"default":null},{"name":"highestRenderID","type":["number"],"help":"The highest Render Order ID currently processed by the Pointer.","optional":false,"default":null},{"name":"includePixelPerfect","type":["boolean"],"help":"If this object has `pixelPerfectClick` or `pixelPerfectOver` set should it be considered as valid?","optional":true,"default":"true"}],"inherited":false,"inheritedFrom":""}],"private":[{"name":"_pointerOutHandler","static":false,"returns":null,"help":"Internal method handling the pointer out event.","line":872,"public":false,"protected":false,"private":true,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"_pointerOverHandler","static":false,"returns":null,"help":"Internal method handling the pointer over event.","line":835,"public":false,"protected":false,"private":true,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"_releasedHandler","static":false,"returns":null,"help":"Internal method handling the pointer released event.","line":953,"public":false,"protected":false,"private":true,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"_touchedHandler","static":false,"returns":null,"help":"Internal method handling the touched event.","line":903,"public":false,"protected":false,"private":true,"parameters":[{"name":"pointer","type":["Phaser.Pointer"],"help":"","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"addedToGroup","static":false,"returns":null,"help":"Handles when the parent Sprite is added to a new Group.","line":294,"public":false,"protected":false,"private":true,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"removedFromGroup","static":false,"returns":null,"help":"Handles when the parent Sprite is removed from a Group.","line":314,"public":false,"protected":false,"private":true,"parameters":[],"inherited":false,"inheritedFrom":""}],"static":[]},"properties":{"public":[{"name":"allowHorizontalDrag","type":["boolean"],"help":"","inlineHelp":"Controls if the Sprite is allowed to be dragged horizontally.","line":69,"default":"true","public":true,"protected":false,"private":false,"readOnly":false},{"name":"allowVerticalDrag","type":["boolean"],"help":"","inlineHelp":"Controls if the Sprite is allowed to be dragged vertically.","line":75,"default":"true","public":true,"protected":false,"private":false,"readOnly":false},{"name":"boundsRect","type":["Phaser.Rectangle"],"help":"","inlineHelp":"A region of the game world within which the sprite is restricted during drag.","line":159,"default":"null","public":true,"protected":false,"private":false,"readOnly":false},{"name":"boundsSprite","type":["Phaser.Sprite"],"help":"","inlineHelp":"A Sprite the bounds of which this sprite is restricted during drag.","line":165,"default":"null","public":true,"protected":false,"private":false,"readOnly":false},{"name":"bringToTop","type":["boolean"],"help":"","inlineHelp":"If true when this Sprite is clicked or dragged it will automatically be bought to the top of the Group it is within.","line":81,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"consumePointerEvent","type":["boolean"],"help":"If this object is set to consume the pointer event then it will stop all propogation from this object on.\\nFor example if you had a stack of 6 sprites with the same priority IDs and one consumed the event, none of the others would receive it.","inlineHelp":"","line":173,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"draggable","type":["boolean"],"help":"","inlineHelp":"Is this sprite allowed to be dragged by the mouse? true = yes, false = no","line":153,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"enabled","type":["boolean"],"help":"","inlineHelp":"If enabled the Input Handler will process input requests and monitor pointer activity.","line":30,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"game","type":["Phaser.Game"],"help":"","inlineHelp":"A reference to the currently running game.","line":24,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"isDragged","type":["boolean"],"help":"","inlineHelp":"true if the Sprite is being currently dragged.","line":63,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"pixelPerfectAlpha","type":["number"],"help":"","inlineHelp":"The alpha tolerance threshold. If the alpha value of the pixel matches or is above this value, it's considered a hit.","line":147,"default":"255","public":true,"protected":false,"private":false,"readOnly":false},{"name":"pixelPerfectClick","type":["number"],"help":"Set to true to use pixel perfect hit detection when checking if the pointer is over this Sprite when it's clicked or touched.\\nThe x\/y coordinates of the pointer are tested against the image in combination with the InputHandler.pixelPerfectAlpha value.\\nWarning: This is expensive so only enable if you really need it.","inlineHelp":"Use a pixel perfect check when testing for clicks or touches on the Sprite.","line":141,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"pixelPerfectOver","type":["number"],"help":"Set to true to use pixel perfect hit detection when checking if the pointer is over this Sprite.\\nThe x\/y coordinates of the pointer are tested against the image in combination with the InputHandler.pixelPerfectAlpha value.\\nWarning: This is expensive, especially on mobile (where it's not even needed!) so only enable if required. Also see the less-expensive InputHandler.pixelPerfectClick.","inlineHelp":"Use a pixel perfect check when testing for pointer over.","line":132,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"priorityID","type":["number"],"help":"The priorityID is used to determine which game objects should get priority when input events occur. For example if you have\\nseveral Sprites that overlap, by default the one at the top of the display list is given priority for input events. You can\\nstop this from happening by controlling the priorityID value. The higher the value, the more important they are considered to the Input events.","inlineHelp":"","line":45,"default":"0","public":true,"protected":false,"private":false,"readOnly":false},{"name":"scaleLayer","type":["boolean"],"help":"","inlineHelp":"EXPERIMENTAL: Please do not use this property unless you know what it does. Likely to change in the future.","line":178,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"snapOffset","type":["Phaser.Point"],"help":"","inlineHelp":"A Point object that contains by how far the Sprite snap is offset.","line":87,"default":"null","public":true,"protected":false,"private":false,"readOnly":false},{"name":"snapOffsetX","type":["number"],"help":"","inlineHelp":"This defines the top-left X coordinate of the snap grid.","line":117,"default":"0","public":true,"protected":false,"private":false,"readOnly":false},{"name":"snapOffsetY","type":["number"],"help":"","inlineHelp":"This defines the top-left Y coordinate of the snap grid..","line":123,"default":"0","public":true,"protected":false,"private":false,"readOnly":false},{"name":"snapOnDrag","type":["boolean"],"help":"","inlineHelp":"When the Sprite is dragged this controls if the center of the Sprite will snap to the pointer on drag or not.","line":93,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"snapOnRelease","type":["boolean"],"help":"","inlineHelp":"When the Sprite is dragged this controls if the Sprite will be snapped on release.","line":99,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"snapX","type":["number"],"help":"","inlineHelp":"When a Sprite has snapping enabled this holds the width of the snap grid.","line":105,"default":"0","public":true,"protected":false,"private":false,"readOnly":false},{"name":"snapY","type":["number"],"help":"","inlineHelp":"When a Sprite has snapping enabled this holds the height of the snap grid.","line":111,"default":"0","public":true,"protected":false,"private":false,"readOnly":false},{"name":"sprite","type":["Phaser.Sprite"],"help":"","inlineHelp":"The Sprite object to which this Input Handler belongs.","line":19,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"useHandCursor","type":["boolean"],"help":"","inlineHelp":"On a desktop browser you can set the 'hand' cursor to appear when moving over the Sprite.","line":51,"default":"false","public":true,"protected":false,"private":false,"readOnly":false}],"protected":[{"name":"checked","type":["boolean"],"help":"","inlineHelp":"A disposable flag used by the Pointer class when performing priority checks.","line":36,"default":null,"public":false,"protected":true,"private":false,"readOnly":false}],"private":[{"name":"_dragPhase","type":["boolean"],"help":"","inlineHelp":"Internal cache var.","line":184,"default":null,"public":false,"protected":false,"private":true,"readOnly":false},{"name":"_pointerData","type":["array"],"help":"","inlineHelp":"Internal cache var.","line":202,"default":null,"public":false,"protected":false,"private":true,"readOnly":false},{"name":"_setHandCursor","type":["boolean"],"help":"","inlineHelp":"Did this Sprite trigger the hand cursor?","line":57,"default":null,"public":false,"protected":false,"private":true,"readOnly":false},{"name":"_tempPoint","type":["Phaser.Point"],"help":"","inlineHelp":"Internal cache var.","line":196,"default":null,"public":false,"protected":false,"private":true,"readOnly":false},{"name":"_wasEnabled","type":["boolean"],"help":"","inlineHelp":"Internal cache var.","line":190,"default":null,"public":false,"protected":false,"private":true,"readOnly":false}]}}