{"class":{"name":"Phaser.SignalBinding","extends":"","static":false,"constructor":true,"parameters":[{"name":"signal","type":["Phaser.Signal"],"help":"Reference to Signal object that listener is currently bound to.","optional":false,"default":null},{"name":"listener","type":["function"],"help":"Handler function bound to the signal.","optional":false,"default":null},{"name":"isOnce","type":["boolean"],"help":"If binding should be executed just once.","optional":false,"default":null},{"name":"listenerContext","type":["object"],"help":"Context on which listener will be executed (object that should represent the `this` variable inside listener function).","optional":true,"default":null},{"name":"priority","type":["number"],"help":"The priority level of the event listener. (default = 0).","optional":true,"default":null}],"help":"Object that represents a binding between a Signal and a listener function.\\nThis is an internal constructor and shouldn't be created directly.\\nInspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes."},"consts":[],"methods":{"public":[{"name":"detach","static":false,"returns":{"types":["function","null"],"help":"Handler function bound to the signal or `null` if binding was previously detached."},"help":"Detach binding from signal.\\nalias to: @see mySignal.remove(myBinding.getListener());","line":102,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"execute","static":false,"returns":{"types":["any"],"help":"Value returned by the listener."},"help":"Call listener passing arbitrary parameters.\\nIf binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.","line":77,"public":true,"protected":false,"private":false,"parameters":[{"name":"paramsArr","type":["array"],"help":"Array of parameters that should be passed to the listener.","optional":true,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"getListener","static":false,"returns":{"types":["function"],"help":"Handler function bound to the signal."},"help":"","line":126,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"getSignal","static":false,"returns":{"types":["Phaser.Signal"],"help":"Signal that listener is currently bound to."},"help":"","line":134,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"isBound","static":false,"returns":{"types":["boolean"],"help":"True if binding is still bound to the signal and has a listener."},"help":"","line":110,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"isOnce","static":false,"returns":{"types":["boolean"],"help":"If SignalBinding will only be executed once."},"help":"","line":118,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"toString","static":false,"returns":{"types":["string"],"help":"String representation of the object."},"help":"","line":153,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""}],"protected":[],"private":[{"name":"_destroy","static":false,"returns":null,"help":"Delete instance properties","line":143,"public":false,"protected":false,"private":true,"parameters":[],"inherited":false,"inheritedFrom":""}],"static":[]},"properties":{"public":[{"name":"active","type":["boolean"],"help":"If binding is active and should be executed.","inlineHelp":"","line":61,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"context","type":["object","undefined","null"],"help":"","inlineHelp":"Context on which listener will be executed (object that should represent the `this` variable inside listener function).","line":38,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"params","type":["array","null"],"help":"Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute` (curried parameters).","inlineHelp":"","line":68,"default":null,"public":true,"protected":false,"private":false,"readOnly":false}],"protected":[],"private":[{"name":"_isOnce","type":["boolean"],"help":"","inlineHelp":"If binding should be executed just once.","line":33,"default":null,"public":false,"protected":false,"private":true,"readOnly":false},{"name":"_listener","type":["Phaser.Game"],"help":"","inlineHelp":"Handler function bound to the signal.","line":27,"default":null,"public":false,"protected":false,"private":true,"readOnly":false},{"name":"_priority","type":["number"],"help":"","inlineHelp":"Listener priority.","line":50,"default":null,"public":false,"protected":false,"private":true,"readOnly":false},{"name":"_signal","type":["Phaser.Signal"],"help":"","inlineHelp":"Reference to Signal object that listener is currently bound to.","line":44,"default":null,"public":false,"protected":false,"private":true,"readOnly":false}]}}