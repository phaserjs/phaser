{"class":{"name":"Phaser.Particle","extends":"Phaser.Sprite","static":false,"constructor":true,"parameters":[{"name":"game","type":["Phaser.Game"],"help":"A reference to the currently running game.","optional":false,"default":null},{"name":"x","type":["number"],"help":"The x coordinate (in world space) to position the Particle at.","optional":false,"default":null},{"name":"y","type":["number"],"help":"The y coordinate (in world space) to position the Particle at.","optional":false,"default":null},{"name":"key","type":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"],"help":"This is the image or texture used by the Particle during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.","optional":false,"default":null},{"name":"frame","type":["string","number"],"help":"If this Particle is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","optional":false,"default":null}],"help":"Create a new `Particle` object. Particles are extended Sprites that are emitted by a particle emitter such as Phaser.Particles.Arcade.Emitter."},"consts":[],"methods":{"public":[{"name":"addChild","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child that was added."},"help":"Adds a child to the container.","line":93,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The DisplayObject to add to the container","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"addChildAt","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child that was added."},"help":"Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown","line":106,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The child to add","optional":false,"default":null},{"name":"index","type":["number"],"help":"The index to place the child in","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"bringToTop","static":false,"returns":{"types":[],"help":[]},"help":"Brings the Sprite to the top of the display list it is a child of. Sprites that are members of a Phaser.Group are only\\nbought to the top of that Group, not the entire display list.","line":797,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"click","static":false,"returns":null,"help":"A callback that is used when the users clicks on the displayObject with their mouse's left button","line":238,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"crop","static":false,"returns":null,"help":"Crop allows you to crop the texture used to display this Sprite.\\nThis modifies the core Sprite texture frame, so the Sprite width\/height properties will adjust accordingly.\\n\\nCropping takes place from the top-left of the Sprite and can be modified in real-time by either providing an updated rectangle object to Sprite.crop,\\nor by modifying Sprite.cropRect (or a reference to it) and then calling Sprite.updateCrop.\\n\\nThe rectangle object given to this method can be either a Phaser.Rectangle or any object so long as it has public x, y, width and height properties.\\nA reference to the rectangle is stored in Sprite.cropRect unless the `copy` parameter is `true` in which case the values are duplicated to a local object.","line":512,"public":true,"protected":false,"private":false,"parameters":[{"name":"rect","type":["Phaser.Rectangle"],"help":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","optional":false,"default":null},{"name":"copy","type":["boolean"],"help":"If false Sprite.cropRect will be a reference to the given rect. If true it will copy the rect values into a local Sprite.cropRect object.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"damage","static":false,"returns":{"types":[],"help":[]},"help":"Damages the Sprite, this removes the given amount from the Sprites health property.\\nIf health is then taken below or is equal to zero `Sprite.kill` is called.","line":735,"public":true,"protected":false,"private":false,"parameters":[{"name":"amount","type":["number"],"help":"The amount to subtract from the Sprite.health value.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"destroy","static":false,"returns":null,"help":"Destroys the Sprite. This removes it from its parent group, destroys the input, event and animation handlers if present\\nand nulls its reference to game, freeing it up for garbage collection.","line":642,"public":true,"protected":false,"private":false,"parameters":[{"name":"destroyChildren","type":["boolean"],"help":"Should every child of this object have its destroy method called?","optional":true,"default":"true"}],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"fromFrame","static":true,"returns":{"types":["PIXI.Sprite"],"help":"A new Sprite using a texture from the texture cache matching the frameId"},"help":"\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded","line":429,"public":true,"protected":false,"private":false,"parameters":[{"name":"frameId","type":["string"],"help":"The frame Id of the texture in the cache","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"fromImage","static":true,"returns":{"types":["PIXI.Sprite"],"help":"A new Sprite using a texture from the texture cache matching the image id"},"help":"\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded","line":446,"public":true,"protected":false,"private":false,"parameters":[{"name":"imageId","type":["string"],"help":"The image url of the texture","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"generateTexture","static":false,"returns":{"types":["PIXI.Texture"],"help":"a texture of the graphics object"},"help":"Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static \/ complicated and needs to be reused multiple times.","line":565,"public":true,"protected":false,"private":false,"parameters":[{"name":"resolution","type":["number"],"help":"The resolution of the texture being generated","optional":false,"default":null},{"name":"scaleMode","type":["number"],"help":"Should be one of the PIXI.scaleMode consts","optional":false,"default":null},{"name":"renderer","type":["PIXI.CanvasRenderer","PIXI.WebGLRenderer"],"help":"The renderer used to generate the texture.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"getBounds","static":false,"returns":{"types":["Phaser.Rectangle"],"help":"the framing rectangle"},"help":"Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account.","line":171,"public":true,"protected":false,"private":false,"parameters":[{"name":"matrix","type":["PIXI.Matrix"],"help":"the transformation matrix of the sprite","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"getChildAt","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child at the given index, if any."},"help":"Returns the child at the specified index","line":196,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"The index to get the child from","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"getChildIndex","static":false,"returns":{"types":["number"],"help":"The index position of the child display object to identify"},"help":"Returns the index position of a child DisplayObject instance","line":161,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The DisplayObject instance to identify","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"getLocalBounds","static":false,"returns":{"types":["Phaser.Rectangle"],"help":"The rectangular bounding area"},"help":"Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration.","line":359,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"kill","static":false,"returns":{"types":[],"help":[]},"help":"Kills a Sprite. A killed Sprite has its alive, exists and visible properties all set to false.\\nIt will dispatch the onKilled event, you can listen to Sprite.events.onKilled for the signal.\\nNote that killing a Sprite is a way for you to quickly recycle it in a Sprite pool, it doesn't free it up from memory.\\nIf you don't need this Sprite any more you should call Sprite.destroy instead.","line":619,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"loadTexture","static":false,"returns":null,"help":"Changes the Texture the Sprite is using entirely. The old texture is removed and the new one is referenced or fetched from the Cache.\\nThis causes a WebGL texture update, so use sparingly or in low-intensity portions of your game.","line":359,"public":true,"protected":false,"private":false,"parameters":[{"name":"key","type":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"],"help":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.","optional":false,"default":null},{"name":"frame","type":["string","number"],"help":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","optional":true,"default":null},{"name":"stopAnimation","type":["boolean"],"help":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","optional":true,"default":"true"}],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"mousedown","static":false,"returns":null,"help":"A callback that is used when the user clicks the mouse's left button down over the sprite","line":244,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"mouseout","static":false,"returns":null,"help":"A callback that is used when the users mouse leaves the displayObject","line":231,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"mouseover","static":false,"returns":null,"help":"A callback that is used when the users mouse rolls over the displayObject","line":225,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"mouseup","static":false,"returns":null,"help":"A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject","line":251,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"mouseupoutside","static":false,"returns":null,"help":"A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject","line":258,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"onEmit","static":false,"returns":null,"help":"Called by the Emitter when this particle is emitted. Left empty for you to over-ride as required.","line":108,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"overlap","static":false,"returns":{"types":["boolean"],"help":"True if the bounds of this Sprite intersects at any point with the bounds of the given display object."},"help":"Checks to see if the bounds of this Sprite overlaps with the bounds of the given Display Object, which can be a Sprite, Image, TileSprite or anything that extends those such as a Button.\\nThis check ignores the Sprites hitArea property and runs a Sprite.getBounds comparison on both objects to determine the result.\\nTherefore it's relatively expensive to use in large quantities (i.e. with lots of Sprites at a high frequency), but should be fine for low-volume testing where physics isn't required.","line":839,"public":true,"protected":false,"private":false,"parameters":[{"name":"displayObject","type":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"],"help":"The display object to check against.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"play","static":false,"returns":{"types":["Phaser.Animation"],"help":"A reference to playing Animation instance."},"help":"Play an animation based on the given key. The animation should previously have been added via sprite.animations.add()\\nIf the requested animation is already playing this request will be ignored. If you need to reset an already running animation do so directly on the Animation object itself.","line":820,"public":true,"protected":false,"private":false,"parameters":[{"name":"name","type":["string"],"help":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\".","optional":false,"default":null},{"name":"frameRate","type":["number"],"help":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","optional":true,"default":"null"},{"name":"loop","type":["boolean"],"help":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","optional":true,"default":"false"},{"name":"killOnComplete","type":["boolean"],"help":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"postUpdate","static":false,"returns":null,"help":"Internal function called by the World postUpdate cycle.","line":322,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"preUpdate","static":false,"returns":{"types":["boolean"],"help":"True if the Sprite was rendered, otherwise false."},"help":"Automatically called by World.preUpdate.","line":204,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"removeChild","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child that was removed."},"help":"Removes a child from the container.","line":213,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The DisplayObject to remove","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"removeChildAt","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child that was removed."},"help":"Removes a child from the specified index position.","line":228,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"The index to get the child from","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"removeChildren","static":false,"returns":null,"help":"Removes all children from this container that are within the begin and end indexes.","line":246,"public":true,"protected":false,"private":false,"parameters":[{"name":"beginIndex","type":["number"],"help":"The beginning position. Default value is 0.","optional":false,"default":null},{"name":"endIndex","type":["number"],"help":"The ending position. Default value is size of the container.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"removeStageReference","static":false,"returns":null,"help":"Removes the current stage reference from the container and all of its children.","line":400,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"reset","static":false,"returns":{"types":[],"help":[]},"help":"Resets the Particle. This places the Particle at the given x\/y world coordinates and then\\nsets alive, exists, visible and renderable all to true. Also resets the outOfBounds state and health values.\\nIf the Particle has a physics body that too is reset.","line":153,"public":true,"protected":false,"private":false,"parameters":[{"name":"x","type":["number"],"help":"The x coordinate (in world space) to position the Particle at.","optional":false,"default":null},{"name":"y","type":["number"],"help":"The y coordinate (in world space) to position the Particle at.","optional":false,"default":null},{"name":"health","type":["number"],"help":"The health to give the Particle.","optional":true,"default":"1"}],"inherited":false,"inheritedFrom":""},{"name":"resetFrame","static":false,"returns":null,"help":"Resets the Texture frame dimensions that the Sprite uses for rendering.","line":488,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"revive","static":false,"returns":{"types":[],"help":[]},"help":"Brings a 'dead' Sprite back to life, optionally giving it the health value specified.\\nA resurrected Sprite has its alive, exists and visible properties all set to true.\\nIt will dispatch the onRevived event, you can listen to Sprite.events.onRevived for the signal.","line":591,"public":true,"protected":false,"private":false,"parameters":[{"name":"health","type":["number"],"help":"The health to give the Sprite.","optional":true,"default":"1"}],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"rightclick","static":false,"returns":null,"help":"A callback that is used when the users clicks on the displayObject with their mouse's right button","line":265,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"rightdown","static":false,"returns":null,"help":"A callback that is used when the user clicks the mouse's right button down over the sprite","line":271,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"rightup","static":false,"returns":null,"help":"A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject","line":278,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"rightupoutside","static":false,"returns":null,"help":"A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject","line":285,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"setAlphaData","static":false,"returns":null,"help":"Called by the Emitter if autoAlpha has been enabled. Passes over the alpha ease data and resets the alpha counter.","line":117,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"setChildIndex","static":false,"returns":null,"help":"Changes the position of an existing child in the display object container","line":178,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The child DisplayObject instance for which you want to change the index number","optional":false,"default":null},{"name":"index","type":["number"],"help":"The resulting index number for the child display object","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"setFrame","static":false,"returns":null,"help":"Sets the Texture frame the Sprite uses for rendering.\\nThis is primarily an internal method used by Sprite.loadTexture, although you may call it directly.","line":435,"public":true,"protected":false,"private":false,"parameters":[{"name":"frame","type":["Phaser.Frame"],"help":"The Frame to be used by the Sprite texture.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Sprite"},{"name":"setScaleData","static":false,"returns":null,"help":"Called by the Emitter if autoScale has been enabled. Passes over the scale ease data and resets the scale counter.","line":132,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"setStageReference","static":false,"returns":null,"help":"Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to.","line":383,"public":true,"protected":false,"private":false,"parameters":[{"name":"stage","type":["PIXI.Stage"],"help":"the stage that the container will have as its current stage reference","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"setTexture","static":false,"returns":null,"help":"Sets the texture of the sprite","line":142,"public":true,"protected":false,"private":false,"parameters":[{"name":"texture","type":["PIXI.Texture"],"help":"The PIXI texture that is displayed by the sprite","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"swapChildren","static":false,"returns":null,"help":"Swaps the position of 2 Display Objects within this container.","line":136,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"","optional":false,"default":null},{"name":"child2","type":["PIXI.DisplayObject"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"tap","static":false,"returns":null,"help":"A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click","line":296,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"toGlobal","static":false,"returns":{"types":["Phaser.Point"],"help":"A point object representing the position of this object"},"help":"Calculates the global position of the display object","line":592,"public":true,"protected":false,"private":false,"parameters":[{"name":"position","type":["Phaser.Point"],"help":"The world origin to calculate from","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"toLocal","static":false,"returns":{"types":["Phaser.Point"],"help":"A point object representing the position of this object"},"help":"Calculates the local position of the display object relative to another point","line":606,"public":true,"protected":false,"private":false,"parameters":[{"name":"position","type":["Phaser.Point"],"help":"The world origin to calculate from","optional":false,"default":null},{"name":"[from]","type":["PIXI.DisplayObject"],"help":"The DisplayObject to calculate the global position from","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"touchend","static":false,"returns":null,"help":"A callback that is used when the user releases a touch over the displayObject","line":308,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"touchendoutside","static":false,"returns":null,"help":"A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite","line":315,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"touchstart","static":false,"returns":null,"help":"A callback that is used when the user touches over the displayObject","line":302,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"update","static":false,"returns":null,"help":"Updates the Particle scale or alpha if autoScale and autoAlpha are set.","line":70,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"updateCache","static":false,"returns":null,"help":"Generates and updates the cached sprite for this object.","line":580,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"updateCrop","static":false,"returns":null,"help":"If you have set a crop rectangle on this Sprite via Sprite.crop and since modified the Sprite.cropRect property (or the rectangle it references)\\nthen you need to update the crop frame by calling this method.","line":550,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Sprite"}],"protected":[],"private":[],"static":[]},"properties":{"public":[{"name":"alive","type":["boolean"],"help":"","inlineHelp":"A useful boolean to control if the Sprite is alive or dead (in terms of your gameplay, it doesn't effect rendering). Also linked to Sprite.health and Sprite.damage.","line":108,"default":"true","public":true,"protected":false,"private":false,"readOnly":false},{"name":"alpha","type":["number"],"help":"The opacity of the object.","inlineHelp":"","line":52,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"anchor","type":["Phaser.Point"],"help":"The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","inlineHelp":"","line":31,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"angle","type":["number"],"help":"Indicates the rotation of the Sprite, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Sprite.rotation instead. Working in radians is also a little faster as it doesn't have to convert the angle.","inlineHelp":"The angle of this Sprite in degrees.","line":853,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"animations","type":["Phaser.AnimationManager"],"help":"","inlineHelp":"This manages animations of the sprite. You can modify animations through it (see Phaser.AnimationManager)","line":60,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"autoCull","type":["boolean"],"help":"Should this Sprite be automatically culled if out of range of the camera?\\nA culled sprite has its renderable property set to 'false'.\\nBe advised this is quite an expensive operation, as it has to calculate the bounds of the object every frame, so only enable it if you really need it.","inlineHelp":"A flag indicating if the Sprite should be automatically camera culled or not.","line":84,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"blendMode","type":["number"],"help":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.","inlineHelp":"","line":75,"default":"PIXI.blendModes.NORMAL;","public":true,"protected":false,"private":false,"readOnly":false},{"name":"body","type":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"],"help":"By default Sprites won't add themselves to any physics system and their physics body will be `null`.\\nTo enable them for physics you need to call `game.physics.enable(sprite, system)` where `sprite` is this object\\nand `system` is the Physics system you want to use to manage this body. Once enabled you can access all physics related properties via `Sprite.body`.\\n\\nImportant: Enabling a Sprite for P2 or Ninja physics will automatically set `Sprite.anchor` to 0.5 so the physics body is centered on the Sprite.\\nIf you need a different result then adjust or re-create the Body shape offsets manually, and\/or reset the anchor after enabling physics.","inlineHelp":"","line":102,"default":"null","public":true,"protected":false,"private":false,"readOnly":false},{"name":"buttonMode","type":["boolean"],"help":"This is used to indicate if the displayObject should display a mouse hand cursor on rollover","inlineHelp":"","line":77,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"cacheAsBitmap","type":["boolean"],"help":"Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'","inlineHelp":"","line":424,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"cameraOffset","type":["Phaser.Point"],"help":"","inlineHelp":"If this object is fixedToCamera then this stores the x\/y offset that its drawn at, from the top-left of the camera view.","line":147,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"checkWorldBounds","type":["boolean"],"help":"If true the Sprite checks if it is still within the world each frame, when it leaves the world it dispatches Sprite.events.onOutOfBounds\\nand optionally kills the sprite (if Sprite.outOfBoundsKill is true). By default this is disabled because the Sprite has to calculate its\\nbounds every frame to support it, and not all games need it. Enable it by setting the value to true.","inlineHelp":"","line":130,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"children","type":["array PIXI.DisplayObject"],"help":"[read-only] The array of children of this container.","inlineHelp":"","line":24,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"cropRect","type":["Phaser.Rectangle"],"help":"","inlineHelp":"The Rectangle used to crop the texture. Set this via Sprite.crop. Any time you modify this property directly you must call Sprite.updateCrop.","line":153,"default":"null","public":true,"protected":false,"private":false,"readOnly":false},{"name":"debug","type":["boolean"],"help":"","inlineHelp":"Handy flag to use with Game.enableStep","line":142,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"defaultCursor","type":["string"],"help":"This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n","inlineHelp":"","line":131,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"deltaX","type":["number"],"help":"Returns the delta x value. The difference between world.x now and in the previous step.","inlineHelp":"The delta value. Positive if the motion was to the right, negative if to the left.","line":876,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"deltaY","type":["number"],"help":"Returns the delta y value. The difference between world.y now and in the previous step.","inlineHelp":"The delta value. Positive if the motion was downwards, negative if upwards.","line":893,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"deltaZ","type":["number"],"help":"Returns the delta z value. The difference between rotation now and in the previous step.","inlineHelp":"The delta value.","line":910,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"destroyPhase","type":["boolean"],"help":"","inlineHelp":"True if this object is currently being destroyed.","line":1212,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"events","type":["Phaser.Events"],"help":"","inlineHelp":"The Events you can subscribe to that are dispatched when certain things happen on this Sprite or its components.","line":55,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"exists","type":["boolean"],"help":"Sprite.exists controls if the core game loop and physics update this Sprite or not.\\nWhen you set Sprite.exists to false it will remove its Body from the physics world (if it has one) and also set Sprite.visible to false.\\nSetting Sprite.exists to true will re-add the Body to the physics world (if it has a body) and set Sprite.visible to true.","inlineHelp":"If the Sprite is processed by the core game update and physics.","line":1050,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"filterArea","type":["Phaser.Rectangle"],"help":"The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle","inlineHelp":"","line":168,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"filters","type":["array"],"help":"Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'","inlineHelp":"","line":388,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"fixedToCamera","type":["boolean"],"help":"An Sprite that is fixed to the camera uses its x\/y coordinates as offsets from the top left of the camera. These are stored in Sprite.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Sprite was in a Group that has x: 200, then this will be added to the cameraOffset.x","inlineHelp":"Set to true to fix this Sprite to the Camera at its current world coordinates.","line":1097,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"frame","type":["number"],"help":"","inlineHelp":"Gets or sets the current frame index and updates the Texture Cache for display.","line":958,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"frameName","type":["string"],"help":"","inlineHelp":"Gets or sets the current frame name and updates the Texture Cache for display.","line":974,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"game","type":["Phaser.Game"],"help":"","inlineHelp":"A reference to the currently running Game.","line":33,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"health","type":["number"],"help":"","inlineHelp":"Health value. Used in combination with damage() to allow for quick killing of Sprites.","line":113,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"height","type":["number"],"help":"The height of the sprite, setting this will actually modify the scale to achieve the value set","inlineHelp":"","line":126,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"hitArea","type":["Phaser.Rectangle","Phaser.Circle","Phaser.Ellipse","Phaser.Polygon"],"help":"This is the defined area that will pick up mouse \/ touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)","inlineHelp":"","line":69,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"inCamera","type":["boolean"],"help":"Checks if the Sprite bounds are within the game camera, otherwise false if fully outside of it.","inlineHelp":"True if the Sprite bounds is within the game camera, even if only partially. Otherwise false if fully outside of it.","line":944,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"inWorld","type":["boolean"],"help":"Checks if the Sprite bounds are within the game world, otherwise false if fully outside of it.","inlineHelp":"True if the Sprite bounds is within the game world, even if only partially. Otherwise false if fully outside of it.","line":927,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"input","type":["Phaser.InputHandler","null"],"help":"","inlineHelp":"The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.","line":89,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"inputEnabled","type":["boolean"],"help":"By default a Sprite won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click\/touch events and more.","inlineHelp":"Set to true to allow this object to receive input events.","line":1008,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"interactive","type":["boolean"],"help":"Indicates if the sprite will have touch and mouse interactivity. It is false by default","inlineHelp":"","line":327,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"key","type":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"],"help":"","inlineHelp":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.","line":65,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"lifespan","type":["number"],"help":"If you would like the Sprite to have a lifespan once 'born' you can set this to a positive value. Handy for particles, bullets, etc.\\nThe lifespan is decremented by game.time.elapsed each update, once it reaches zero the kill() function is called.","inlineHelp":"The lifespan of the Sprite (in ms) before it will be killed.","line":121,"default":"0","public":true,"protected":false,"private":false,"readOnly":false},{"name":"mask","type":["PIXI.Graphics"],"help":"Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null.","inlineHelp":"","line":369,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"name","type":["string"],"help":"","inlineHelp":"The user defined name given to this Sprite.","line":39,"default":"''","public":true,"protected":false,"private":false,"readOnly":false},{"name":"outOfBoundsKill","type":["boolean"],"help":"","inlineHelp":"If true Sprite.kill is called as soon as Sprite.inWorld returns false, as long as Sprite.checkWorldBounds is true.","line":136,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"parent","type":["PIXI.DisplayObjectContainer"],"help":"[read-only] The display object container that contains this display object.","inlineHelp":"","line":94,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"pivot","type":["Phaser.Point"],"help":"The pivot point of the displayObject that it rotates around","inlineHelp":"","line":36,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"position","type":["Phaser.Point"],"help":"The coordinate of the object relative to the local coordinates of the parent.","inlineHelp":"","line":20,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"renderOrderID","type":["number"],"help":"","inlineHelp":"The render order ID, reset every frame.","line":991,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"renderable","type":["boolean"],"help":"Can this object be rendered","inlineHelp":"","line":85,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"rotation","type":["number"],"help":"The rotation of the object in radians.","inlineHelp":"","line":44,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"scale","type":["Phaser.Point"],"help":"The scale factor of the object.","inlineHelp":"","line":28,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"shader","type":["PIXI.AbstractFilter"],"help":"The shader that will be used to render the texture to the stage. Set to null to remove a current shader.","inlineHelp":"","line":84,"default":"null","public":true,"protected":false,"private":false,"readOnly":false},{"name":"smoothed","type":["boolean"],"help":"Enable or disable texture smoothing for this Sprite. Only works for bitmap\/image textures. Smoothing is enabled by default.","inlineHelp":"Set to true to smooth the texture of this Sprite, or false to disable smoothing (great for pixel art)","line":1126,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"stage","type":["PIXI.Stage"],"help":"[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage.","inlineHelp":"","line":103,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"texture","type":["PIXI.Texture"],"help":"The texture that the sprite is using","inlineHelp":"","line":39,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"tint","type":["number"],"help":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","inlineHelp":"","line":66,"default":"0xFFFFFF","public":true,"protected":false,"private":false,"readOnly":false},{"name":"type","type":["number"],"help":"","inlineHelp":"The const type of this object.","line":45,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"visible","type":["boolean"],"help":"The visibility of the object.","inlineHelp":"","line":60,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"width","type":["number"],"help":"The width of the sprite, setting this will actually modify the scale to achieve the value set","inlineHelp":"","line":110,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"world","type":["Phaser.Point"],"help":"","inlineHelp":"The world coordinates of this Sprite. This differs from the x\/y coordinates which are relative to the Sprites container.","line":74,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"worldAlpha","type":["number"],"help":"[read-only] The multiplied alpha of the displayObject","inlineHelp":"","line":112,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"worldVisible","type":["boolean"],"help":"[read-only] Indicates if the sprite is globally visible.","inlineHelp":"","line":346,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"x","type":["number"],"help":"The position of the Sprite on the x axis relative to the local coordinates of the parent.","inlineHelp":"The position of the Sprite on the x axis relative to the local coordinates of the parent.","line":1160,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"y","type":["number"],"help":"The position of the Sprite on the y axis relative to the local coordinates of the parent.","inlineHelp":"The position of the Sprite on the y axis relative to the local coordinates of the parent.","line":1187,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"z","type":["number"],"help":"","inlineHelp":"The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.","line":50,"default":null,"public":true,"protected":false,"private":false,"readOnly":false}],"protected":[{"name":"alphaData","type":["array"],"help":"","inlineHelp":"A reference to the alphaData array owned by the Emitter that emitted this Particle.","line":51,"default":null,"public":false,"protected":true,"private":false,"readOnly":false},{"name":"autoAlpha","type":["boolean"],"help":"","inlineHelp":"If this Particle automatically changes alpha this is set to true by Particle.setAlphaData.","line":45,"default":null,"public":false,"protected":true,"private":false,"readOnly":false},{"name":"autoScale","type":["boolean"],"help":"","inlineHelp":"If this Particle automatically scales this is set to true by Particle.setScaleData.","line":27,"default":null,"public":false,"protected":true,"private":false,"readOnly":false},{"name":"scaleData","type":["array"],"help":"","inlineHelp":"A reference to the scaleData array owned by the Emitter that emitted this Particle.","line":33,"default":null,"public":false,"protected":true,"private":false,"readOnly":false}],"private":[{"name":"_a","type":["number"],"help":"","inlineHelp":"Internal cache var for tracking auto alpha.","line":57,"default":null,"public":false,"protected":false,"private":true,"readOnly":false},{"name":"_s","type":["number"],"help":"","inlineHelp":"Internal cache var for tracking auto scale.","line":39,"default":null,"public":false,"protected":false,"private":true,"readOnly":false}]}}