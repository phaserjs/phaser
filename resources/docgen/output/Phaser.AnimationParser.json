{"class":{"name":"Phaser.AnimationParser","extends":"","static":true,"constructor":false,"parameters":[],"help":"Responsible for parsing sprite sheet and JSON data into the internal FrameData format that Phaser uses for animations."},"consts":[],"methods":{"public":[{"name":"JSONData","static":false,"returns":{"types":["Phaser.FrameData"],"help":"A FrameData object containing the parsed frames."},"help":"Parse the JSON data and extract the animation frame data from it.","line":108,"public":true,"protected":false,"private":false,"parameters":[{"name":"game","type":["Phaser.Game"],"help":"A reference to the currently running game.","optional":false,"default":null},{"name":"json","type":["object"],"help":"The JSON data from the Texture Atlas. Must be in Array format.","optional":false,"default":null},{"name":"cacheKey","type":["string"],"help":"The Game.Cache asset key of the texture image.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"JSONDataHash","static":false,"returns":{"types":["Phaser.FrameData"],"help":"A FrameData object containing the parsed frames."},"help":"Parse the JSON data and extract the animation frame data from it.","line":173,"public":true,"protected":false,"private":false,"parameters":[{"name":"game","type":["Phaser.Game"],"help":"A reference to the currently running game.","optional":false,"default":null},{"name":"json","type":["object"],"help":"The JSON data from the Texture Atlas. Must be in JSON Hash format.","optional":false,"default":null},{"name":"cacheKey","type":["string"],"help":"The Game.Cache asset key of the texture image.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"XMLData","static":false,"returns":{"types":["Phaser.FrameData"],"help":"A FrameData object containing the parsed frames."},"help":"Parse the XML data and extract the animation frame data from it.","line":241,"public":true,"protected":false,"private":false,"parameters":[{"name":"game","type":["Phaser.Game"],"help":"A reference to the currently running game.","optional":false,"default":null},{"name":"xml","type":["object"],"help":"The XML data from the Texture Atlas. Must be in Starling XML format.","optional":false,"default":null},{"name":"cacheKey","type":["string"],"help":"The Game.Cache asset key of the texture image.","optional":false,"default":null}],"inherited":false,"inheritedFrom":""},{"name":"spriteSheet","static":false,"returns":{"types":["Phaser.FrameData"],"help":"A FrameData object containing the parsed frames."},"help":"Parse a Sprite Sheet and extract the animation frame data from it.","line":28,"public":true,"protected":false,"private":false,"parameters":[{"name":"game","type":["Phaser.Game"],"help":"A reference to the currently running game.","optional":false,"default":null},{"name":"key","type":["string"],"help":"The Game.Cache asset key of the Sprite Sheet image.","optional":false,"default":null},{"name":"frameWidth","type":["number"],"help":"The fixed width of each frame of the animation.","optional":false,"default":null},{"name":"frameHeight","type":["number"],"help":"The fixed height of each frame of the animation.","optional":false,"default":null},{"name":"frameMax","type":["number"],"help":"The total number of animation frames to extact from the Sprite Sheet. The default value of -1 means \"extract all frames\".","optional":true,"default":"-1"},{"name":"margin","type":["number"],"help":"If the frames have been drawn with a margin, specify the amount here.","optional":true,"default":"0"},{"name":"spacing","type":["number"],"help":"If the frames have been drawn with spacing between them, specify the amount here.","optional":true,"default":"0"}],"inherited":false,"inheritedFrom":""}],"protected":[],"private":[],"static":[]},"properties":{"public":[],"protected":[],"private":[]}}