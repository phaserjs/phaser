<?js
var data = obj;
var self = this;
function mkSignature (data) {
    var attribs = data.attribs;
    attribs = attribs.replace('protected', 'internal');    

    return (attribs + (data.kind === 'class' ? 'new ' : '') +
        data.name +
        (data.kind !== 'event' ? data.signature : ''));
}
?>
<dt>
    <h4 class="name <?js= data.deprecated ? 'toc-deprecated' : ''?>"
        id="<?js= id ?>"><?js= mkSignature(data) ?></h4>
    
    <?js if (data.summary) { ?>
    <p class="summary"><?js= summary ?></p>
    <?js } ?>
</dt>
<dd>
    <?js if (data.deprecated) { ?>
        <dt class="important deprecated-notice">
            This method is <em>deprecated</em> and should not be used. It may be removed in the future.
        </dt>
    <?js } ?>

    <?js if (data.description) { ?>
    <div class="description">
        <?js= data.description ?>
    </div>
    <?js } ?>

    <?js if (kind === 'event' && data.type && data.type.names) {?>
        <h5>Type:</h5>
        <ul>
            <li>
                <?js= self.partial('type.tmpl', data.type.names) ?>
            </li>
        </ul>
    <?js } ?>
    
    <?js if (data['this']) { ?>
        <h5>This:</h5>
        <ul><li><?js= this.linkto(data['this'], data['this']) ?></li></ul>
    <?js } ?>
    
    <?js if (data.params && params.length) { ?>
        <h5>Parameters:</h5>
        <?js= this.partial('params.tmpl', params) ?>
    <?js } ?>

    <?js if (data.returns && returns.length) { ?>
    <h5>Returns:</h5>
    <div class="returns">
        <?js returns.forEach(function(r) { ?>
            <?js= self.partial('returns.tmpl', r) ?>
        <?js }); ?>
    </div>
    <?js } ?>
    
    <?js= this.partial('details.tmpl', data) ?>
    
    <?js if (data.fires && fires.length) { ?>
    <h5>Fires:</h5>
    <ul><?js fires.forEach(function(f) { ?>
        <li><?js= self.linkto(f) ?></li>
    <?js }); ?></ul>
    <?js } ?>

    <?js if (data.listens && listens.length) { ?>
    <h5>Listens to Events:</h5>
    <ul><?js listens.forEach(function(f) { ?>
        <li><?js= self.linkto(f) ?></li>
    <?js }); ?></ul>
    <?js } ?>

    <?js if (data.listeners && listeners.length) { ?>
    <h5>Listeners of This Event:</h5>
    <ul><?js listeners.forEach(function(f) { ?>
        <li><?js= self.linkto(f) ?></li>
    <?js }); ?></ul>
    <?js } ?>
    
    <?js if (data.exceptions && exceptions.length) { ?>
    <h5>Throws:</h5>
    <?js if (exceptions.length > 1) { ?><ul><?js
        exceptions.forEach(function(r) { ?>
            <li><?js= self.partial('exceptions.tmpl', r) ?></li>
        <?js });
    ?></ul><?js } else {
        exceptions.forEach(function(r) { ?>
            <?js= self.partial('exceptions.tmpl', r) ?>
        <?js });
    } } ?>   
    
    <?js if (data.examples && examples.length) { ?>
        <h5>Example<?js= examples.length > 1? 's':'' ?></h5>
        <?js= this.partial('examples.tmpl', examples) ?>
    <?js } ?>
</dd>
