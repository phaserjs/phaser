import Renderer from '../../Renderer';
export default class ParticleRenderer implements Renderer {
    game: any;
    glContext: any;
    maxParticles: any;
    vertShader: any;
    fragShader: any;
    program: any;
    vertexArray: any;
    indexBufferObject: any;
    vertexDataBuffer: any;
    indexDataBuffer: any;
    elementCount: any;
    currentText: any;
    currentTexture2D: any;
    viewMatrixLocation: any;
    type: any;
    view: any;
    resolution: any;
    width: number;
    height: number;
    config: any;
    constructor(game: any);
    static readonly VERTEX_SIZE: number;
    static readonly INDEX_SIZE: number;
    static readonly PARTICLE_VERTEX_COUNT: number;
    static readonly PARTICLE_INDEX_COUNT: number;
    static readonly PARTICLE_VERTEX_COMPONENT_COUNT: number;
    static readonly MAX_PARTICLES: number;
    static readonly VERTEX_SHADER_SOURCE: string;
    static readonly FRAGMENT_SHADER_SOURCE: string;
    init(): void;
    destroy(): void;
    isFull(): boolean;
    add(x: any, y: any, width: any, height: any, umin: any, vmin: any, umax: any, vmax: any): void;
    setTexture2D(texture2D: any): void;
    render(): void;
    bind(): void;
    unbind(): void;
    flush(): void;
    resize(width: any, height: any): void;
}
