import Area from './Area';
import Circumference from './Circumference';
import CircumferencePoint from './CircumferencePoint';
import Clone from './Clone';
import Contains from './Contains';
import ContainsPoint from './ContainsPoint';
import ContainsRect from './ContainsRect';
import CopyFrom from './CopyFrom';
import Equals from './Equals';
import GetBounds from './GetBounds';
import Offset from './Offset';
import OffsetPoint from './OffsetPoint';
import Random from './Random';
export default class Circle {
    static Area: typeof Area;
    static Circumference: typeof Circumference;
    static CircumferencePoint: typeof CircumferencePoint;
    static Clone: typeof Clone;
    static Contains: typeof Contains;
    static ContainsPoint: typeof ContainsPoint;
    static ContainsRect: typeof ContainsRect;
    static CopyFrom: typeof CopyFrom;
    static Equals: typeof Equals;
    static GetBounds: typeof GetBounds;
    static Offset: typeof Offset;
    static OffsetPoint: typeof OffsetPoint;
    static Random: typeof Random;
    private _radius;
    private _diameter;
    x: number;
    y: number;
    constructor(x?: number, y?: number, radius?: number);
    setTo(x: number, y: number, radius: number): Circle;
    setEmpty(): Circle;
    setPosition(x: number, y?: number): Circle;
    isEmpty(): boolean;
    radius: number;
    diameter: number;
    left: number;
    right: number;
    top: number;
    bottom: number;
}
