import Area from './Area';
import Clone from './Clone';
import Contains from './Contains';
import ContainsPoint from './ContainsPoint';
import ContainsRect from './ContainsRect';
import CopyFrom from './CopyFrom';
import Equals from './Equals';
import GetBounds from './GetBounds';
import Offset from './Offset';
import OffsetPoint from './OffsetPoint';
import Random from './Random';
export default class Ellipse {
    static Area: typeof Area;
    static Clone: typeof Clone;
    static Contains: typeof Contains;
    static ContainsPoint: typeof ContainsPoint;
    static ContainsRect: typeof ContainsRect;
    static CopyFrom: typeof CopyFrom;
    static Equals: typeof Equals;
    static GetBounds: typeof GetBounds;
    static Offset: typeof Offset;
    static OffsetPoint: typeof OffsetPoint;
    static Random: typeof Random;
    x: number;
    y: number;
    width: number;
    height: number;
    constructor(x?: number, y?: number, width?: number, height?: number);
    setTo(x: any, y: any, width: any, height: any): this;
    setEmpty(): this;
    setPosition(x: any, y: any): this;
    setSize(width: any, height: any): this;
    isEmpty(): boolean;
    getMinorRadius(): number;
    getMajorRadius(): number;
    left: number;
    right: number;
    top: number;
    bottom: number;
}
