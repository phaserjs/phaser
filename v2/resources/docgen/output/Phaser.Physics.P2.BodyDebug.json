{"class":{"name":"Phaser.Physics.P2.BodyDebug","extends":"Phaser.Group","static":false,"constructor":true,"parameters":[{"name":"game","type":["Phaser.Game"],"help":"Game reference to the currently running game.","optional":false,"default":null},{"name":"body","type":["Phaser.Physics.P2.Body"],"help":"The P2 Body to display debug data for.","optional":false,"default":null},{"name":"settings","type":["object"],"help":"Settings object.","optional":false,"default":null}],"help":"Draws a P2 Body to a Graphics instance for visual debugging.\\nNeedless to say, for every body you enable debug drawing on, you are adding processor and graphical overhead.\\nSo use sparingly and rarely (if ever) in production code."},"consts":[],"methods":{"public":[{"name":"add","static":false,"returns":{"types":["any"],"help":"The child that was added to the Group."},"help":"Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is automatically added to the top of the Group, so renders on-top of everything else within the Group. If you need to control\\nthat then see the addAt method.","line":209,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"An instance of Phaser.Sprite, Phaser.Button or any other display object.","optional":false,"default":null},{"name":"silent","type":["boolean"],"help":"If the silent parameter is `true` the child will not dispatch the onAddedToGroup event.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"addAll","static":false,"returns":null,"help":"Adds the amount to the given property on all children in this Group.\\nGroup.addAll('x', 10) will add 10 to the child.x value.","line":956,"public":true,"protected":false,"private":false,"parameters":[{"name":"property","type":["string"],"help":"The property to increment, for example 'body.velocity.x' or 'angle'.","optional":false,"default":null},{"name":"amount","type":["number"],"help":"The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50.","optional":false,"default":null},{"name":"checkAlive","type":["boolean"],"help":"If true the property will only be changed if the child is alive.","optional":false,"default":null},{"name":"checkVisible","type":["boolean"],"help":"If true the property will only be changed if the child is visible.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"addAt","static":false,"returns":{"types":["any"],"help":"The child that was added to the Group."},"help":"Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is added to the Group at the location specified by the index value, this allows you to control child ordering.","line":273,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"An instance of Phaser.Sprite, Phaser.Button or any other display object..","optional":false,"default":null},{"name":"index","type":["number"],"help":"The index within the Group to insert the child to.","optional":false,"default":null},{"name":"silent","type":["boolean"],"help":"If the silent parameter is `true` the child will not dispatch the onAddedToGroup event.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"addChild","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child that was added."},"help":"Adds a child to the container.","line":93,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The DisplayObject to add to the container","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"addChildAt","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child that was added."},"help":"Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown","line":106,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The child to add","optional":false,"default":null},{"name":"index","type":["number"],"help":"The index to place the child in","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"addMultiple","static":false,"returns":{"types":["any"],"help":"The array of children that were added to the Group."},"help":"Adds an array existing objects to this Group. The objects can be instances of Phaser.Sprite, Phaser.Button or any other display object.\\nThe children are automatically added to the top of the Group, so render on-top of everything else within the Group.\\nTODO: Add ability to pass the children as parameters rather than having to be an array.","line":249,"public":true,"protected":false,"private":false,"parameters":[{"name":"children","type":["array"],"help":"An array containing instances of Phaser.Sprite, Phaser.Button or any other display object.","optional":false,"default":null},{"name":"silent","type":["boolean"],"help":"If the silent parameter is `true` the children will not dispatch the onAddedToGroup event.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"ascendingSortHandler","static":false,"returns":null,"help":"An internal helper function for the sort process.","line":1385,"public":true,"protected":false,"private":false,"parameters":[{"name":"a","type":["object"],"help":"The first object being sorted.","optional":false,"default":null},{"name":"b","type":["object"],"help":"The second object being sorted.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"bringToTop","static":false,"returns":{"types":["any"],"help":"The child that was moved."},"help":"Brings the given child to the top of this Group so it renders above all other children.","line":509,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to bring to the top of this Group.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"callAll","static":false,"returns":null,"help":"Calls a function on all of the children regardless if they are dead or alive (see callAllExists if you need control over that)\\nAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child.","line":1095,"public":true,"protected":false,"private":false,"parameters":[{"name":"method","type":["string"],"help":"A string containing the name of the function that will be called. The function must exist on the child.","optional":false,"default":null},{"name":"context","type":["string"],"help":"A string containing the context under which the method will be executed. Set to null to default to the child.","optional":true,"default":"null"},{"name":"parameter","type":["any"],"help":"Additional parameters that will be passed to the method.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"callAllExists","static":false,"returns":null,"help":"Calls a function on all of the children that have exists=true in this Group.\\nAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback.","line":1019,"public":true,"protected":false,"private":false,"parameters":[{"name":"callback","type":["function"],"help":"The function that exists on the children that will be called.","optional":false,"default":null},{"name":"existsValue","type":["boolean"],"help":"Only children with exists=existsValue will be called.","optional":false,"default":null},{"name":"parameter","type":["any"],"help":"Additional parameters that will be passed to the callback.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"checkAll","static":false,"returns":null,"help":"This function allows you to quickly check that the same property across all children of this Group is equal to the given value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be checked on the Group but not its children.","line":925,"public":true,"protected":false,"private":false,"parameters":[{"name":"key","type":["string"],"help":"The property, as a string, to be set. For example: 'body.velocity.x'","optional":false,"default":null},{"name":"value","type":["any"],"help":"The value that will be checked.","optional":false,"default":null},{"name":"checkAlive","type":["boolean"],"help":"If set then only children with alive=true will be checked. This includes any Groups that are children.","optional":true,"default":"false"},{"name":"checkVisible","type":["boolean"],"help":"If set then only children with visible=true will be checked. This includes any Groups that are children.","optional":true,"default":"false"},{"name":"force","type":["boolean"],"help":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"checkProperty","static":false,"returns":{"types":["boolean"],"help":"True if the property was was equal to value, false if not."},"help":"Checks a property for the given value on the child.","line":790,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to check the property value on.","optional":false,"default":null},{"name":"key","type":["array"],"help":"An array of strings that make up the property that will be set.","optional":false,"default":null},{"name":"value","type":["any"],"help":"The value that will be checked.","optional":false,"default":null},{"name":"force","type":["boolean"],"help":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"click","static":false,"returns":null,"help":"A callback that is used when the users clicks on the displayObject with their mouse's left button","line":238,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"componentToHex","static":false,"returns":null,"help":"Component to hex conversion.","line":410,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"countDead","static":false,"returns":{"types":["number"],"help":"The number of children flagged as dead."},"help":"Call this function to find out how many members of the group are dead.","line":1582,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"countLiving","static":false,"returns":{"types":["number"],"help":"The number of children flagged as alive."},"help":"Call this function to find out how many members of the group are alive.","line":1570,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"create","static":false,"returns":{"types":["Phaser.Sprite","object"],"help":"The child that was created. Will be a Phaser.Sprite unless Group.classType has been changed."},"help":"Automatically creates a new Phaser.Sprite object and adds it to the top of this Group.\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image.","line":335,"public":true,"protected":false,"private":false,"parameters":[{"name":"x","type":["number"],"help":"The x coordinate to display the newly created Sprite at. The value is in relation to the Group.x point.","optional":false,"default":null},{"name":"y","type":["number"],"help":"The y coordinate to display the newly created Sprite at. The value is in relation to the Group.y point.","optional":false,"default":null},{"name":"key","type":["string"],"help":"The Game.cache key of the image that this Sprite will use.","optional":false,"default":null},{"name":"frame","type":["number","string"],"help":"If the Sprite image contains multiple frames you can specify which one to use here.","optional":true,"default":null},{"name":"exists","type":["boolean"],"help":"The default exists state of the Sprite.","optional":true,"default":"true"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"createMultiple","static":false,"returns":null,"help":"Automatically creates multiple Phaser.Sprite objects and adds them to the top of this Group.\\nUseful if you need to quickly generate a pool of identical sprites, such as bullets. By default the sprites will be set to not exist\\nand will be positioned at 0, 0 (relative to the Group.x\/y)\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image.","line":380,"public":true,"protected":false,"private":false,"parameters":[{"name":"quantity","type":["number"],"help":"The number of Sprites to create.","optional":false,"default":null},{"name":"key","type":["string"],"help":"The Game.cache key of the image that this Sprite will use.","optional":false,"default":null},{"name":"frame","type":["number","string"],"help":"If the Sprite image contains multiple frames you can specify which one to use here.","optional":true,"default":null},{"name":"exists","type":["boolean"],"help":"The default exists state of the Sprite.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"customSort","static":false,"returns":null,"help":"This allows you to use your own sort handler function.\\nIt will be sent two parameters: the two children involved in the comparison (a and b). It should return -1 if a > b, 1 if a < b or 0 if a === b.","line":1364,"public":true,"protected":false,"private":false,"parameters":[{"name":"sortHandler","type":["function"],"help":"Your sort handler function. It will be sent two parameters: the two children involved in the comparison. It must return -1, 1 or 0.","optional":false,"default":null},{"name":"context","type":["object"],"help":"The scope in which the sortHandler is called.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"descendingSortHandler","static":false,"returns":null,"help":"An internal helper function for the sort process.","line":1416,"public":true,"protected":false,"private":false,"parameters":[{"name":"a","type":["object"],"help":"The first object being sorted.","optional":false,"default":null},{"name":"b","type":["object"],"help":"The second object being sorted.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"destroy","static":false,"returns":null,"help":"Destroys this Group. Removes all children, then removes the container from the display list and nulls references.","line":1751,"public":true,"protected":false,"private":false,"parameters":[{"name":"destroyChildren","type":["boolean"],"help":"Should every child of this Group have its destroy method called?","optional":true,"default":"true"},{"name":"soft","type":["boolean"],"help":"A 'soft destroy' (set to true) doesn't remove this Group from its parent or null the game reference. Set to false and it does.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"divideAll","static":false,"returns":null,"help":"Divides the given property by the amount on all children in this Group.\\nGroup.divideAll('x', 2) will half the child.x value.","line":1004,"public":true,"protected":false,"private":false,"parameters":[{"name":"property","type":["string"],"help":"The property to divide, for example 'body.velocity.x' or 'angle'.","optional":false,"default":null},{"name":"amount","type":["number"],"help":"The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50.","optional":false,"default":null},{"name":"checkAlive","type":["boolean"],"help":"If true the property will only be changed if the child is alive.","optional":false,"default":null},{"name":"checkVisible","type":["boolean"],"help":"If true the property will only be changed if the child is visible.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"draw","static":false,"returns":null,"help":"Draws the P2 shapes to the Graphics object.","line":162,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"drawCircle","static":false,"returns":null,"help":"Draws a P2 Line shape.","line":196,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"drawConvex","static":false,"returns":null,"help":"Draws a P2 Convex shape.","line":212,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"drawPath","static":false,"returns":null,"help":"Draws a P2 Path.","line":282,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"drawPlane","static":false,"returns":null,"help":"Draws a P2 Plane shape.","line":352,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"filter","static":false,"returns":{"types":["Phaser.ArrayList"],"help":"Returns an array list containing all the children that the predicate returned true for"},"help":"Allows you to obtain a Phaser.ArrayList of children that return true for the given predicate\\nFor example:\\nvar healthyList = Group.filter(function(child, index, children) {\\nreturn child.health > 10 ? true : false;\\n}, true);\\nhealthyList.callAll('attack');\\nNote: Currently this will skip any children which are Groups themselves.","line":1223,"public":true,"protected":false,"private":false,"parameters":[{"name":"predicate","type":["function"],"help":"The function that each child will be evaluated against. Each child of the Group will be passed to it as its first parameter, the index as the second, and the entire child array as the third","optional":false,"default":null},{"name":"checkExists","type":["boolean"],"help":"If set only children with exists=true will be passed to the callback, otherwise all children will be passed.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"forEach","static":false,"returns":null,"help":"Allows you to call your own function on each member of this Group. You must pass the callback and context in which it will run.\\nAfter the checkExists parameter you can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEach(awardBonusGold, this, true, 100, 500)\\nNote: Currently this will skip any children which are Groups themselves.","line":1250,"public":true,"protected":false,"private":false,"parameters":[{"name":"callback","type":["function"],"help":"The function that will be called. Each child of the Group will be passed to it as its first parameter.","optional":false,"default":null},{"name":"callbackContext","type":["object"],"help":"The context in which the function should be called (usually 'this').","optional":false,"default":null},{"name":"checkExists","type":["boolean"],"help":"If set only children with exists=true will be passed to the callback, otherwise all children will be passed.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"forEachAlive","static":false,"returns":null,"help":"Allows you to call your own function on each alive member of this Group (where child.alive=true). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachAlive(causeDamage, this, 500)","line":1295,"public":true,"protected":false,"private":false,"parameters":[{"name":"callback","type":["function"],"help":"The function that will be called. Each child of the Group will be passed to it as its first parameter.","optional":false,"default":null},{"name":"callbackContext","type":["object"],"help":"The context in which the function should be called (usually 'this').","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"forEachDead","static":false,"returns":null,"help":"Allows you to call your own function on each dead member of this Group (where alive=false). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachDead(bringToLife, this)","line":1313,"public":true,"protected":false,"private":false,"parameters":[{"name":"callback","type":["function"],"help":"The function that will be called. Each child of the Group will be passed to it as its first parameter.","optional":false,"default":null},{"name":"callbackContext","type":["object"],"help":"The context in which the function should be called (usually 'this').","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"forEachExists","static":false,"returns":null,"help":"Allows you to call your own function on each member of this Group where child.exists=true. You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachExists(causeDamage, this, 500)","line":1277,"public":true,"protected":false,"private":false,"parameters":[{"name":"callback","type":["function"],"help":"The function that will be called. Each child of the Group will be passed to it as its first parameter.","optional":false,"default":null},{"name":"callbackContext","type":["object"],"help":"The context in which the function should be called (usually 'this').","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"generateTexture","static":false,"returns":{"types":["PIXI.Texture"],"help":"a texture of the graphics object"},"help":"Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static \/ complicated and needs to be reused multiple times.","line":565,"public":true,"protected":false,"private":false,"parameters":[{"name":"resolution","type":["number"],"help":"The resolution of the texture being generated","optional":false,"default":null},{"name":"scaleMode","type":["number"],"help":"Should be one of the PIXI.scaleMode consts","optional":false,"default":null},{"name":"renderer","type":["PIXI.CanvasRenderer","PIXI.WebGLRenderer"],"help":"The renderer used to generate the texture.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"getAt","static":false,"returns":{"types":["any"],"help":"The child that was found at the given index. If the index was out of bounds then this will return -1."},"help":"Returns the child found at the given index within this Group.","line":310,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"The index to return the child from.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"getBottom","static":false,"returns":{"types":["any"],"help":"The child at the bottom of the Group."},"help":"Returns the child at the bottom of this Group. The bottom is the one being displayed (rendered) below every other child.","line":1555,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"getBounds","static":false,"returns":{"types":["Phaser.Rectangle"],"help":"The rectangular bounding area"},"help":"Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration.","line":299,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"PIXI.DisplayObjectContainer"},{"name":"getChildAt","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child at the given index, if any."},"help":"Returns the child at the specified index","line":196,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"The index to get the child from","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"getChildIndex","static":false,"returns":{"types":["number"],"help":"The index position of the child display object to identify"},"help":"Returns the index position of a child DisplayObject instance","line":161,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The DisplayObject instance to identify","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"getFirstAlive","static":false,"returns":{"types":["any"],"help":"The first alive child, or null if none found."},"help":"Call this function to retrieve the first object with alive === true in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc.","line":1515,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"getFirstDead","static":false,"returns":{"types":["any"],"help":"The first dead child, or null if none found."},"help":"Call this function to retrieve the first object with alive === false in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc.","line":1528,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"getFirstExists","static":false,"returns":{"types":["any"],"help":"The first child, or null if none found."},"help":"Call this function to retrieve the first object with exists == (the given state) in the Group.","line":1497,"public":true,"protected":false,"private":false,"parameters":[{"name":"state","type":["boolean"],"help":"True or false.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"getIndex","static":false,"returns":{"types":["number"],"help":"The index of the child or -1 if it's not a member of this Group."},"help":"Get the index position of the given child in this Group. This should always match the childs z property.","line":629,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to get the index for.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"getLocalBounds","static":false,"returns":{"types":["Phaser.Rectangle"],"help":"The rectangular bounding area"},"help":"Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration.","line":359,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"getRandom","static":false,"returns":{"types":["any"],"help":"A random child of this Group."},"help":"Returns a member at random from the group.","line":1596,"public":true,"protected":false,"private":false,"parameters":[{"name":"startIndex","type":["number"],"help":"Optional offset off the front of the array. Default value is 0, or the beginning of the array.","optional":false,"default":null},{"name":"length","type":["number"],"help":"Optional restriction on the number of values you want to randomly select from.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"getTop","static":false,"returns":{"types":["any"],"help":"The child at the top of the Group."},"help":"Returns the child at the top of this Group. The top is the one being displayed (rendered) above every other child.","line":1540,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"hasProperty","static":false,"returns":{"types":["boolean"],"help":"True if the child has the property, otherwise false."},"help":"Checks if the child has the given property. Will scan up to 4 levels deep only.","line":679,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to check for the existance of the property on.","optional":false,"default":null},{"name":"key","type":["array"],"help":"An array of strings that make up the property.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"iterate","static":false,"returns":{"types":["any"],"help":"Returns either a numeric total (if RETURN_TOTAL was specified) or the child object."},"help":"Iterates over the children of the Group. When a child has a property matching key that equals the given value, it is considered as a match.\\nMatched children can be sent to the optional callback, or simply returned or counted.\\nYou can add as many callback parameters as you like, which will all be passed to the callback along with the child, after the callbackContext parameter.","line":1446,"public":true,"protected":false,"private":false,"parameters":[{"name":"key","type":["string"],"help":"The child property to check, i.e. 'exists', 'alive', 'health'","optional":false,"default":null},{"name":"value","type":["any"],"help":"If child.key === this value it will be considered a match. Note that a strict comparison is used.","optional":false,"default":null},{"name":"returnType","type":["number"],"help":"How to return the data from this method. Either Phaser.Group.RETURN_NONE, Phaser.Group.RETURN_TOTAL or Phaser.Group.RETURN_CHILD.","optional":false,"default":null},{"name":"callback","type":["function"],"help":"Optional function that will be called on each matching child. Each child of the Group will be passed to it as its first parameter.","optional":true,"default":"null"},{"name":"callbackContext","type":["object"],"help":"The context in which the function should be called (usually 'this').","optional":true,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"mousedown","static":false,"returns":null,"help":"A callback that is used when the user clicks the mouse's left button down over the sprite","line":244,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"mouseout","static":false,"returns":null,"help":"A callback that is used when the users mouse leaves the displayObject","line":231,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"mouseover","static":false,"returns":null,"help":"A callback that is used when the users mouse rolls over the displayObject","line":225,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"mouseup","static":false,"returns":null,"help":"A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject","line":251,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"mouseupoutside","static":false,"returns":null,"help":"A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject","line":258,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"moveDown","static":false,"returns":{"types":["any"],"help":"The child that was moved."},"help":"Moves the given child down one place in this Group unless it's already at the top.","line":571,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to move down in the Group.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"moveUp","static":false,"returns":{"types":["any"],"help":"The child that was moved."},"help":"Moves the given child up one place in this Group unless it's already at the top.","line":547,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to move up in the Group.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"multiplyAll","static":false,"returns":null,"help":"Multiplies the given property by the amount on all children in this Group.\\nGroup.multiplyAll('x', 2) will x2 the child.x value.","line":988,"public":true,"protected":false,"private":false,"parameters":[{"name":"property","type":["string"],"help":"The property to multiply, for example 'body.velocity.x' or 'angle'.","optional":false,"default":null},{"name":"amount","type":["number"],"help":"The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20.","optional":false,"default":null},{"name":"checkAlive","type":["boolean"],"help":"If true the property will only be changed if the child is alive.","optional":false,"default":null},{"name":"checkVisible","type":["boolean"],"help":"If true the property will only be changed if the child is visible.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"next","static":false,"returns":{"types":["any"],"help":"The child the cursor now points to."},"help":"Advances the Group cursor to the next object in the Group. If it's at the end of the Group it wraps around to the first object.","line":439,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"previous","static":false,"returns":{"types":["any"],"help":"The child the cursor now points to."},"help":"Moves the Group cursor to the previous object in the Group. If it's at the start of the Group it wraps around to the last object.","line":466,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"randomPastelHex","static":false,"returns":null,"help":"Picks a random pastel color.","line":379,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"remove","static":false,"returns":{"types":["boolean"],"help":"true if the child was removed from this Group, otherwise false."},"help":"Removes the given child from this Group. This will dispatch an onRemovedFromGroup event from the child (if it has one),\\nreset the Group cursor and optionally destroy the child.","line":1620,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to remove.","optional":false,"default":null},{"name":"destroy","type":["boolean"],"help":"You can optionally call destroy on the child that was removed.","optional":true,"default":"false"},{"name":"silent","type":["boolean"],"help":"If the silent parameter is `true` the child will not dispatch the onRemovedFromGroup event.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"removeAll","static":false,"returns":null,"help":"Removes all children from this Group, setting the group properties of the children to `null`.\\nThe Group container remains on the display list.","line":1661,"public":true,"protected":false,"private":false,"parameters":[{"name":"destroy","type":["boolean"],"help":"You can optionally call destroy on each child that is removed.","optional":true,"default":"false"},{"name":"silent","type":["boolean"],"help":"If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"removeBetween","static":false,"returns":null,"help":"Removes all children from this Group whos index falls beteen the given startIndex and endIndex values.","line":1700,"public":true,"protected":false,"private":false,"parameters":[{"name":"startIndex","type":["number"],"help":"The index to start removing children from.","optional":false,"default":null},{"name":"endIndex","type":["number"],"help":"The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the Group.","optional":true,"default":null},{"name":"destroy","type":["boolean"],"help":"You can optionally call destroy on the child that was removed.","optional":true,"default":"false"},{"name":"silent","type":["boolean"],"help":"If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"removeChild","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child that was removed."},"help":"Removes a child from the container.","line":213,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The DisplayObject to remove","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"removeChildAt","static":false,"returns":{"types":["PIXI.DisplayObject"],"help":"The child that was removed."},"help":"Removes a child from the specified index position.","line":228,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"The index to get the child from","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"removeChildren","static":false,"returns":null,"help":"Removes all children from this container that are within the begin and end indexes.","line":246,"public":true,"protected":false,"private":false,"parameters":[{"name":"beginIndex","type":["number"],"help":"The beginning position. Default value is 0.","optional":false,"default":null},{"name":"endIndex","type":["number"],"help":"The ending position. Default value is size of the container.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"removeStageReference","static":false,"returns":null,"help":"Removes the current stage reference from the container and all of its children.","line":400,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"replace","static":false,"returns":{"types":["any"],"help":"Returns the oldChild that was replaced within this Group."},"help":"Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group.","line":643,"public":true,"protected":false,"private":false,"parameters":[{"name":"oldChild","type":["any"],"help":"The child in this Group that will be replaced.","optional":false,"default":null},{"name":"newChild","type":["any"],"help":"The child to be inserted into this Group.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"resetCursor","static":false,"returns":{"types":["any"],"help":"The child the cursor now points to."},"help":"Sets the Group cursor to the first object in the Group. If the optional index parameter is given it sets the cursor to the object at that index instead.","line":415,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"Set the cursor to point to a specific index.","optional":true,"default":"0"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"reverse","static":false,"returns":null,"help":"Reverses all children in this Group. Note that this does not propagate, only direct children are re-ordered.","line":615,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"rgbToHex","static":false,"returns":null,"help":"Converts from RGB to Hex.","line":401,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"rightclick","static":false,"returns":null,"help":"A callback that is used when the users clicks on the displayObject with their mouse's right button","line":265,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"rightdown","static":false,"returns":null,"help":"A callback that is used when the user clicks the mouse's right button down over the sprite","line":271,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"rightup","static":false,"returns":null,"help":"A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject","line":278,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"rightupoutside","static":false,"returns":null,"help":"A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject","line":285,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"sendToBack","static":false,"returns":{"types":["any"],"help":"The child that was moved."},"help":"Sends the given child to the bottom of this Group so it renders below all other children.","line":528,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to send to the bottom of this Group.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"set","static":false,"returns":{"types":["boolean"],"help":"True if the property was set, false if not."},"help":"This function allows you to quickly set a property on a single child of this Group to a new value.\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","line":823,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["Phaser.Sprite"],"help":"The child to set the property on.","optional":false,"default":null},{"name":"key","type":["string"],"help":"The property, as a string, to be set. For example: 'body.velocity.x'","optional":false,"default":null},{"name":"value","type":["any"],"help":"The value that will be set.","optional":false,"default":null},{"name":"checkAlive","type":["boolean"],"help":"If set then the child will only be updated if alive=true.","optional":true,"default":"false"},{"name":"checkVisible","type":["boolean"],"help":"If set then the child will only be updated if visible=true.","optional":true,"default":"false"},{"name":"operation","type":["number"],"help":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","optional":true,"default":"0"},{"name":"force","type":["boolean"],"help":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"setAll","static":false,"returns":null,"help":"This function allows you to quickly set the same property across all children of this Group to a new value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be set on the Group but not its children.\\nIf you need that ability please see `Group.setAllChildren`.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","line":854,"public":true,"protected":false,"private":false,"parameters":[{"name":"key","type":["string"],"help":"The property, as a string, to be set. For example: 'body.velocity.x'","optional":false,"default":null},{"name":"value","type":["any"],"help":"The value that will be set.","optional":false,"default":null},{"name":"checkAlive","type":["boolean"],"help":"If set then only children with alive=true will be updated. This includes any Groups that are children.","optional":true,"default":"false"},{"name":"checkVisible","type":["boolean"],"help":"If set then only children with visible=true will be updated. This includes any Groups that are children.","optional":true,"default":"false"},{"name":"operation","type":["number"],"help":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","optional":true,"default":"0"},{"name":"force","type":["boolean"],"help":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"setAllChildren","static":false,"returns":null,"help":"This function allows you to quickly set the same property across all children of this Group, and any child Groups, to a new value.\\n\\nIf this Group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\\nUnlike with Group.setAll the property is NOT set on child Groups itself.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","line":889,"public":true,"protected":false,"private":false,"parameters":[{"name":"key","type":["string"],"help":"The property, as a string, to be set. For example: 'body.velocity.x'","optional":false,"default":null},{"name":"value","type":["any"],"help":"The value that will be set.","optional":false,"default":null},{"name":"checkAlive","type":["boolean"],"help":"If set then only children with alive=true will be updated. This includes any Groups that are children.","optional":true,"default":"false"},{"name":"checkVisible","type":["boolean"],"help":"If set then only children with visible=true will be updated. This includes any Groups that are children.","optional":true,"default":"false"},{"name":"operation","type":["number"],"help":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","optional":true,"default":"0"},{"name":"force","type":["boolean"],"help":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"setChildIndex","static":false,"returns":null,"help":"Changes the position of an existing child in the display object container","line":178,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"The child DisplayObject instance for which you want to change the index number","optional":false,"default":null},{"name":"index","type":["number"],"help":"The resulting index number for the child display object","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"setProperty","static":false,"returns":{"types":["boolean"],"help":"True if the property was set, false if not."},"help":"Sets a property to the given value on the child. The operation parameter controls how the value is set.\\nOperation 0 means set the existing value to the given value, or if force is `false` create a new property with the given value.\\n1 will add the given value to the value already present.\\n2 will subtract the given value from the value already present.\\n3 will multiply the value already present by the given value.\\n4 will divide the value already present by the given value.","line":720,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["any"],"help":"The child to set the property value on.","optional":false,"default":null},{"name":"key","type":["array"],"help":"An array of strings that make up the property that will be set.","optional":false,"default":null},{"name":"value","type":["any"],"help":"The value that will be set.","optional":false,"default":null},{"name":"operation","type":["number"],"help":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","optional":true,"default":"0"},{"name":"force","type":["boolean"],"help":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","optional":true,"default":"false"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"setStageReference","static":false,"returns":null,"help":"Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to.","line":383,"public":true,"protected":false,"private":false,"parameters":[{"name":"stage","type":["PIXI.Stage"],"help":"the stage that the container will have as its current stage reference","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"sort","static":false,"returns":null,"help":"Call this function to sort the group according to a particular value and order.\\nFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`.","line":1330,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["string"],"help":"The `string` name of the property you want to sort on. Defaults to the objects z-depth value.","optional":true,"default":"'z'"},{"name":"order","type":["number"],"help":"The `Group` constant that defines the sort order. Possible values are Phaser.Group.SORT_ASCENDING and Phaser.Group.SORT_DESCENDING.","optional":true,"default":"Phaser.Group.SORT_ASCENDING"}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"subAll","static":false,"returns":null,"help":"Subtracts the amount from the given property on all children in this Group.\\nGroup.subAll('x', 10) will minus 10 from the child.x value.","line":972,"public":true,"protected":false,"private":false,"parameters":[{"name":"property","type":["string"],"help":"The property to decrement, for example 'body.velocity.x' or 'angle'.","optional":false,"default":null},{"name":"amount","type":["number"],"help":"The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10.","optional":false,"default":null},{"name":"checkAlive","type":["boolean"],"help":"If true the property will only be changed if the child is alive.","optional":false,"default":null},{"name":"checkVisible","type":["boolean"],"help":"If true the property will only be changed if the child is visible.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"swap","static":false,"returns":null,"help":"Swaps the position of two children in this Group. Both children must be in this Group.\\nYou cannot swap a child with itself, or swap un-parented children.","line":495,"public":true,"protected":false,"private":false,"parameters":[{"name":"child1","type":["any"],"help":"The first child to swap.","optional":false,"default":null},{"name":"child2","type":["any"],"help":"The second child to swap.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"},{"name":"swapChildren","static":false,"returns":null,"help":"Swaps the position of 2 Display Objects within this container.","line":136,"public":true,"protected":false,"private":false,"parameters":[{"name":"child","type":["PIXI.DisplayObject"],"help":"","optional":false,"default":null},{"name":"child2","type":["PIXI.DisplayObject"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"tap","static":false,"returns":null,"help":"A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click","line":296,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"toGlobal","static":false,"returns":{"types":["Phaser.Point"],"help":"A point object representing the position of this object"},"help":"Calculates the global position of the display object","line":592,"public":true,"protected":false,"private":false,"parameters":[{"name":"position","type":["Phaser.Point"],"help":"The world origin to calculate from","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"toLocal","static":false,"returns":{"types":["Phaser.Point"],"help":"A point object representing the position of this object"},"help":"Calculates the local position of the display object relative to another point","line":606,"public":true,"protected":false,"private":false,"parameters":[{"name":"position","type":["Phaser.Point"],"help":"The world origin to calculate from","optional":false,"default":null},{"name":"[from]","type":["PIXI.DisplayObject"],"help":"The DisplayObject to calculate the global position from","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"touchend","static":false,"returns":null,"help":"A callback that is used when the user releases a touch over the displayObject","line":308,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"touchendoutside","static":false,"returns":null,"help":"A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite","line":315,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"touchstart","static":false,"returns":null,"help":"A callback that is used when the user touches over the displayObject","line":302,"public":true,"protected":false,"private":false,"parameters":[{"name":"interactionData","type":["PIXI.InteractionData"],"help":"","optional":false,"default":null}],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"update","static":false,"returns":null,"help":"Core update.","line":71,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"updateCache","static":false,"returns":null,"help":"Generates and updates the cached sprite for this object.","line":580,"public":true,"protected":false,"private":false,"parameters":[],"inherited":true,"inheritedFrom":"PIXI.Sprite"},{"name":"updateSpriteTransform","static":false,"returns":null,"help":"Core update.","line":82,"public":true,"protected":false,"private":false,"parameters":[],"inherited":false,"inheritedFrom":""},{"name":"xy","static":false,"returns":null,"help":"Positions the child found at the given index within this Group to the given x and y coordinates.","line":596,"public":true,"protected":false,"private":false,"parameters":[{"name":"index","type":["number"],"help":"The index of the child in the Group to set the position of.","optional":false,"default":null},{"name":"x","type":["number"],"help":"The new x position of the child.","optional":false,"default":null},{"name":"y","type":["number"],"help":"The new y position of the child.","optional":false,"default":null}],"inherited":true,"inheritedFrom":"Phaser.Group"}],"protected":[],"private":[],"static":[]},"properties":{"public":[{"name":"alive","type":["boolean"],"help":"","inlineHelp":"The alive property is useful for Groups that are children of other Groups and need to be included\/excluded in checks like forEachAlive.","line":71,"default":"true","public":true,"protected":false,"private":false,"readOnly":false},{"name":"alpha","type":["number"],"help":"The opacity of the object.","inlineHelp":"","line":52,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"angle","type":["number"],"help":"The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position.","inlineHelp":"The angle of rotation given in degrees, where 0 degrees = to the right.","line":1814,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"body","type":["Phaser.Physics.P2.Body"],"help":"","inlineHelp":"The P2 Body to display debug data for.","line":46,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"buttonMode","type":["boolean"],"help":"This is used to indicate if the displayObject should display a mouse hand cursor on rollover","inlineHelp":"","line":77,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"cacheAsBitmap","type":["boolean"],"help":"Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'","inlineHelp":"","line":424,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"cameraOffset","type":["Phaser.Point"],"help":"","inlineHelp":"If this object is fixedToCamera then this stores the x\/y offset that its drawn at, from the top-left of the camera view.","line":116,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"canvas","type":["Phaser.Graphics"],"help":"","inlineHelp":"The canvas to render the debug info to.","line":51,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"children","type":["array PIXI.DisplayObject"],"help":"[read-only] The array of children of this container.","inlineHelp":"","line":24,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"classType","type":["object"],"help":"The type of objects that will be created when you use Group.create or Group.createMultiple. Defaults to Phaser.Sprite.\\nWhen a new object is created it is passed the following parameters to its constructor: game, x, y, key, frame.","inlineHelp":"","line":91,"default":"Phaser.Sprite","public":true,"protected":false,"private":false,"readOnly":false},{"name":"cursor","type":["any"],"help":"The cursor is a simple way to iterate through the objects in a Group using the Group.next and Group.previous functions.\\nThe cursor is set to the first child added to the Group and doesn't change unless you call next, previous or set it directly with Group.cursor.","inlineHelp":"The current display object that the Group cursor is pointing to.","line":111,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"defaultCursor","type":["string"],"help":"This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n","inlineHelp":"","line":131,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"enableBody","type":["boolean"],"help":"","inlineHelp":"If true all Sprites created by, or added to this Group, will have a physics body enabled on them. Change the body type with `Group.physicsBodyType`.","line":122,"default":"enableBody","public":true,"protected":false,"private":false,"readOnly":false},{"name":"enableBodyDebug","type":["boolean"],"help":"","inlineHelp":"If true when a physics body is created (via Group.enableBody) it will create a physics debug object as well. Only works for P2 bodies.","line":127,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"exists","type":["boolean"],"help":"","inlineHelp":"If exists is true the Group is updated, otherwise it is skipped.","line":77,"default":"true","public":true,"protected":false,"private":false,"readOnly":false},{"name":"filterArea","type":["Phaser.Rectangle"],"help":"The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle","inlineHelp":"","line":168,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"filters","type":["array"],"help":"Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'","inlineHelp":"","line":388,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"fixedToCamera","type":["boolean"],"help":"A Group that is fixed to the camera uses its x\/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x","inlineHelp":"Set to true to fix this Group to the Camera at its current world coordinates.","line":1834,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"game","type":["Phaser.Game"],"help":"","inlineHelp":"A reference to the currently running Game.","line":30,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"height","type":["number"],"help":"The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set","inlineHelp":"","line":65,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"hitArea","type":["Phaser.Rectangle","Phaser.Circle","Phaser.Ellipse","Phaser.Polygon"],"help":"This is the defined area that will pick up mouse \/ touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)","inlineHelp":"","line":69,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"ignoreDestroy","type":["boolean"],"help":"","inlineHelp":"A Group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.","line":83,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"interactive","type":["boolean"],"help":"Indicates if the sprite will have touch and mouse interactivity. It is false by default","inlineHelp":"","line":327,"default":"false","public":true,"protected":false,"private":false,"readOnly":false},{"name":"length","type":["number"],"help":"","inlineHelp":"The total number of children in this Group, regardless of their exists\/alive status.","line":1798,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"mask","type":["PIXI.Graphics"],"help":"Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null.","inlineHelp":"","line":369,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"name","type":["string"],"help":"","inlineHelp":"A name for this Group. Not used internally but useful for debugging.","line":40,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"onDestroy","type":["Phaser.Signal"],"help":"","inlineHelp":"This signal is dispatched when the parent is destoyed.","line":137,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"parent","type":["Phaser.Group","Phaser.Sprite"],"help":"","inlineHelp":"The parent of this Group.","line":96,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"physicsBodyType","type":["number"],"help":"","inlineHelp":"If Group.enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.","line":132,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"pivot","type":["Phaser.Point"],"help":"","inlineHelp":"The pivot point of the Group container.","line":105,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"position","type":["Phaser.Point"],"help":"The coordinate of the object relative to the local coordinates of the parent.","inlineHelp":"","line":20,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"ppu","type":["number"],"help":"","inlineHelp":"Pixels per Length Unit.","line":40,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"renderable","type":["boolean"],"help":"Can this object be rendered","inlineHelp":"","line":85,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"rotation","type":["number"],"help":"The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position.","inlineHelp":"The angle of rotation given in radians.","line":1879,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"scale","type":["Phaser.Point"],"help":"","inlineHelp":"The scale of the Group container.","line":100,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"stage","type":["PIXI.Stage"],"help":"[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage.","inlineHelp":"","line":103,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"total","type":["number"],"help":"","inlineHelp":"The total number of children in this Group who have a state of exists = true.","line":1783,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"visible","type":["boolean"],"help":"","inlineHelp":"The visible state of the Group. Non-visible Groups and all of their children are not rendered.","line":1884,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"width","type":["number"],"help":"The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set","inlineHelp":"","line":37,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"worldAlpha","type":["number"],"help":"[read-only] The multiplied alpha of the displayObject","inlineHelp":"","line":112,"default":null,"public":true,"protected":false,"private":false,"readOnly":true},{"name":"worldVisible","type":["boolean"],"help":"[read-only] Indicates if the sprite is globally visible.","inlineHelp":"","line":346,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"x","type":["number"],"help":"The x coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x\/y coordinates of its children, but it will update their worldTransform and on-screen position.","inlineHelp":"The x coordinate of the Group container.","line":1865,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"y","type":["number"],"help":"The y coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x\/y coordinates of its children, but it will update their worldTransform and on-screen position.","inlineHelp":"The y coordinate of the Group container.","line":1872,"default":null,"public":true,"protected":false,"private":false,"readOnly":false},{"name":"z","type":["number"],"help":"","inlineHelp":"The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.","line":59,"default":null,"public":true,"protected":false,"private":false,"readOnly":false}],"protected":[],"private":[{"name":"defaultSettings","type":["object"],"help":"","inlineHelp":"Default debug settings.","line":28,"default":null,"public":false,"protected":false,"private":true,"readOnly":false}]}}